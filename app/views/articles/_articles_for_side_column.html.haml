- accs = section.article_categories
- categories = []
- for category in accs
  - categories << category.id
- count = ColumnSectionType.find_by_partial_name("articles_for_side_column").default_count if count.blank?
- ops = "person_id = #{@page.author_id}" if @page.author_id
- if @page.article_category_id.nil?
  - articles = Article.published.reject{|a| !(a.article_category_ids.any? {|ac| categories.include?(ac)} or categories.include?(a.article_category_id))}[0..count-1]
- else
  - articles = @page.article_category.articles.published.find(:all, :conditions => ops, :limit => count)

- @recent_articles = articles

- content_for :side_column do
  - template = Liquid::Template.parse(section.section_layout)
  = template.render( 'article_list' => @recent_articles, 'title' => title, 'article_loop' => (render :partial => 'articles/article_for_side_column', :collection => @recent_articles, :locals => { :article_for_side_column_layout => @article_for_side_column_layout, :show_blurb => show_blurb, :section => section, :show_author => section.show_author}))

- section.count.blank? ? count = ColumnSectionType.find_by_partial_name("articles_for_main_column").default_count : count = section.count
- ops = "person_id = #{@page.author_id}" if @page.author_id
- accs = section.article_categories
- categories = []
- for category in accs
  - categories << category.id
- if @page.article_category_id.nil?
  - articles = Article.published.reject{|a| !(a.article_category_ids.any? {|ac| categories.include?(ac)} or categories.include?(a.article_category_id))}[0..count-1]
- else
  - articles = @page.article_category.articles.published.find(:all, :conditions => ops, :limit => count)
- recent_articles = articles
- unless recent_articles.empty?
  - if section.format != "full"
    .articles-for-main-column
      - unless section.title.blank?
        %h2= section.title
      %ul.recent_articles.list_of_links
        - for article in recent_articles
          %li
            %h3= link_to article.title, article_path(article)
            %span.date
              = "by #{article.person.name} - " if section.show_author
              = article.published_at.strftime("%a, %b %d, %Y")
            - if section.show_blurb
              %p= article.description.blank? ? article.blurb : truncate(h(article.description), :length => 100)
            = clear
  - else
    .articles-for-main-column
      - unless section.title.blank?
        %h2= section.title
      = render :partial => "articles/article_for_list", :collection => recent_articles
      %p=link_to("More #{(@cms_config['site_settings']['article_title']).pluralize}", blog_path)
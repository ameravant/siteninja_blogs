= f.error_messages

- content_for :head do
  %script{:type => "text/javascript"}
    function addtext(text) {
    = "document.getElementById('article_body').value += ' ' + text + ' ';"
    }
  %style{:type => "text/css"}
    a#preview-link {font-size: 16px; font-weight: bold; vertical-align: baseline; text-decoration: none; font-family: Tahoma; float: right; display: block; margin-right: 75px; line-height: 16px; }
  %script{:type => "text/javascript"}
    jQuery(document).ready(function() {
    jQuery("a#preview-link").fancybox({ 
    'zoomSpeedIn': 300,
    'zoomSpeedOut': 300,
    'overlayShow': true,
    'hideOnContentClick': false,
    'easingOut': 'easeOutQuad',
    'easingIn': 'easeInQuad',
    'type': 'iframe',
    'width': '90%',
    'height': '90%'
    }); 
    }); 
    function setLink(){
    =#=document.cookie = "article_body=" + escape(tinyMCE.get('article_body').getContent())+"; path=/admin/articles/; host=#{self.request.domain}";
    document.getElementById('post_preview_body').value = tinyMCE.get('article_body').getContent();
    document.getElementById('submit-preview').click();
    document.cookie="reload=true; path=/";
    ==document.getElementById('preview-link').href= '/admin/articles/preview?article_id=#{@article.id}&article_title=' + escape(document.getElementById('article_title').value) + '&article_person_id=' + escape(document.getElementById('article_person_id').value) + '&article_article_category_id=' + document.getElementById('article_article_category_id').value + '&article_description=' + escape(document.getElementById('article_description').value) + '&article_show_description=' + document.getElementById('article_show_description').value + '&article_tag_list=' + escape(document.getElementById('article_tag_list').value) + '&article_blurb=' + escape(document.getElementById('article_blurb').value)
    }

%table{:cellspacing => "0"}
  %tr{:class => "form-option #{cycle('even', 'odd')}"}
    %td.big= f.label :title
    %td= f.text_field :title, :class => "big", :size => 120
  - if @editor && !current_user.is_contributor_only?
    %tr{:class => "form-option #{cycle('even', 'odd')}"}
      %td.big= f.label :person_id, "Author"
      %td
        = f.select :person_id, @possible_authors.collect {|p| [p.name, p.id]}, :selected => (@article.new_record? ? current_user.person_id : @article.person_id)
  %tr{:class => "form-option #{cycle('even', 'odd')}"}
    %td.big= f.label :article_category_id, "Primary Category"
    %td= f.select :article_category_id, ArticleCategory.all.sort_by(&:title).collect {|ac| [ac.title, ac.id]}, {:include_blank => "Select a main category"}, :selected => current_user.id
  - unless current_user.is_contributor_only?
    %tr{:class => "form-option top #{cycle('even', 'odd')}"}
      %td{:class => (!@article.new_record? and @article.article_categories.active.count == 0 ? "bold red" : nil)}= f.label :article_category_ids, "Secondary Categories"
      %td
        - for article_category in @article_categories
          %span.article_category_checkbox
            = check_box_tag "article[article_category_ids][]", article_category.id, @article.article_categories.include?(article_category), :id => dom_id(article_category)
            = label_tag dom_id(article_category), "#{article_category.name}"
        = clear
    %tr{:class => "form-option #{cycle('even', 'odd')}"}
      %td.top= f.label :description, "Short Description"
      %td
        = f.text_area :description, :size => "90x5"
        %br
        = f.check_box :show_description
        = f.label :show_description, "Show Description under Title on Article"
    %tr{:class => "form-option #{cycle('even', 'odd')}"}
      %td.top= f.label :tag_list, "Tags"
      %td
        = f.text_field :tag_list, :size => 120
        .small.gray Separate words or phrases with a comma
- unless current_user.is_contributor_only?
  %br
  %h2= f.label :blurb
  .small.gray Displayed on Blog Summary page, under Title
  = f.text_area :blurb, :size => "80x20"
%br
%br

.options
  - unless @article.images.empty? || (current_user.is_contributor_only? && !@article.published)
    = render :partial => "admin/shared/image_options", :locals => {:images => @article.images}
%h2{:style => "width: 650px;"}
  = f.label :body
  =link_to("#{icon("Search")} Preview Article", "", :id => "preview-link", :class => "preview-link", :onclick => "setLink()")
= f.text_area :body, :size => "85x50", :class => "mceEditor"
- unless current_user.is_contributor_only?
  %p.display-notes=link_to("Display Note Field", "javascript:null(0)")
  .notes
    %h2= f.label :notes
    %span.note Will not be shown publicly. Use to save page content while editing.
    = f.text_area :notes, :size => "85x50", :class => "mceEditor"
  - content_for :head do
    :javascript
      jQuery(document).ready(function() {
      jQuery(".notes").hide();
      jQuery(".display-notes").click(function()
      {
      jQuery(this).next(".notes").slideToggle(500);
      });
      });
%p
  = f.check_box :published if current_user.has_role(["Admin", "Editor", "Author"])
  = f.label :published, "Publish this #{@cms_config['site_settings']['article_title']}"
  = f.label :published_at, "on"
  = f.datetime_select :published_at, :order => [ :month, :day, :year, :hour ]

- unless current_user.is_contributor_only?
  %p
    = f.check_box :social_share
    = f.label :social_share, "Show ShareThis link"
  
%p
  = f.check_box :notify_author_of_comments
  = f.label :notify_author_of_comments, "Notify me when comments are posted for this #{@cms_config['site_settings']['article_title']}"

= clear
- fancy_submit admin_articles_path do
  = f.submit "Save #{@cms_config['site_settings']['article_title']}"
- content_for :pre_footer do
  %div{:style => "width: 1px; height: 1px; overflow: hidden;"}
    - form_remote_tag :url => post_preview_admin_articles_path, :method => "put", :html => {:name => "post_preview"} do
      = text_area :post_preview, :body
      = submit_tag "submit", :id => "submit-preview"
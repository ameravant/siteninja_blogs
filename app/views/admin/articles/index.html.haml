
- @responsive = true
- content_for :meta_title do
  =@cms_config['site_settings']['article_title'] ? @cms_config['site_settings']['article_title'].pluralize : "Articles"
%style
  td.article-title { font-size: 1em; }
  tr.article-title .notes { display: none; position: absolute; }
  tr.article-title:hover .notes { display: block; padding: 5px 10px; background: rgba(255,255,255,.9); border-radius: 5px; border: 1px solid white; font-size: .8em; line-height: 1.2em; margin-left: 20px; width: 90%; box-shadow: 0 10px 10px rgba(0,0,0,.5); z-index: 2; } 
  ==#search_article_category_id { height: 33px; border: 1px solid rgba(0,0,0,.2); border-radius: 100px; text-align: center; padding: 0 5px; }
  ==.box #search { width: 172px; }
  ==.article-status.detail a { margin-right: 10px; }
%h1= '<i class="fas fa-newspaper"></i> ' + yield(:meta_title).strip

%div.box
  .float-right
    - form_tag(request.path, :method => "get", :id => "search_form") do
      - fields_for :search do |f|
        = tag(:input, :id => "search", :name => "q", :type => "search", :size => "25", :value => (params[:q] ? params[:q] : nil), :autosave => "site-ninja.com", :results => 10, :placeholder => "Search Articles")
        = f.select(:article_category_id, ([['- Filter by Category -','']] + ArticleCategory.all.collect {|p| [p.title, p.id] }), :selected => params[:search][:article_category_id].to_i)
        = hidden_field_tag :fancy, params[:fancy]
        = submit_tag "Search"
        - unless params[:q].blank?
          = link_to "clear search", request.path + "?fancy=" + params[:fancy]

    - content_for :head do
      %script
        Event.observe(window, 'load', function() {
        $('search').select();
        })
  %ul
    %li
      %span.hmenu
        = link_to "<i class=\"fas fa-plus-circle\"></i> Write a new #{@cms_config['site_settings']['article_title']}", new_admin_article_path(@article)
        - #%span.desktop-only== as #{current_user.name}
    - if current_user.has_role(["Admin", "Editor"])
      %li
        %span.hmenu
          = link_to("<i class=\"far fa-folder\"></i> Manage categories", admin_article_categories_path)
    - if current_user.has_role(["Admin", "Editor"])
      %li
        %span.hmenu
          = link_to("<i class=\"fas fa-rss\"></i> Manage RSS Feeds", admin_feeds_path)
    %li
      %span.hmenu
        = link_to("<i class=\"fas fa-save\"></i> Clear Article Cache", admin_articles_path(:params => {:clear_cache => true}))
  = clear
%br

- if !params[:q].blank?
  %h2== Found #{pluralize @all_articles.size, "article"}.
- elsif !params[:search][:article_category_id].blank?
  %h2==#{ArticleCategory.find(params[:search][:article_category_id].to_i).title} Articles


%table.article-list.full_width{ :cellspacing => "0" }
  %thead
    %tr
      %th.title-header Title
      %th.author-header Author
      %th.status-header{ :style => "width: 140px;" } Status
      %th.images-header{ :style => "width: 60px;" } Images
      %th.files-header{ :style => "width: 60px;" } Files
      %th.comments-header{ :style => "width: 80px;" } Comments
      %th.options-header.center{ :style => "width: 100px;" } Options
  - if @articles.total_pages > 1
    %tfoot
      %tr
        %td{ :colspan => "3" }= will_paginate @articles
  %tbody
    - for article in @articles do

      %tr[article]{ :class => "#{'from-feed' if !article.source_url.blank?} article-title" }
        %td.article-title
          %span.hmenu
            - if current_user.has_role(["Admin", "Editor", "Author"]) or !article.published?
              = link_to h(article.title), edit_admin_article_path(article)
            - else
              = link_to h(article.title), article_path(article)
          - if article.article_categories.active.count == 0 and article.article_category.blank?
            %span.small.red= link_to("no category", edit_admin_article_path(article), :class => "red")
          - if !article.notes.blank?
            .notes= article.notes
        %td.article-author.detail
          == #{article.person.blank? ? article.author_name : article.person.name}
        %td.article-status.detail
          - if article.published_date_in_past? and article.published?
            %span.publish= link_to "Published", article, :class => "green"
            == #{article.published_at.strftime('%b %d, %Y')}
          - elsif article.to_be_published?
            %span.to-publish Published
            == for #{article.published_at.strftime('%a, %b %d')}
          - elsif article.deactivated?
            .pending Pending
          - else
            .draft= link_to "Draft", edit_admin_article_path(article), :class => "gray"
        - if (current_user.is_contributor_only? && article.published)
          %td.article-images
            = "%d images" % article.images_count
          %td
            = "%d files" % article.assets_count
        -else
          %td
            = link_to("<i class='fas fa-images'></i> #{article.images_count}", [:admin, article, :images])
          %td
            - if article.assets_count < 1
              = link_to("<i class=\"far fa-file-alt\"></i> #{article.assets_count}", [:new, :admin, article, :asset])
            - else
              = link_to("<i class=\"far fa-file-alt\"></i> #{article.assets_count}", [:admin, article, :assets])
        %td
          = link_to("<i class='far fa-comments'></i> #{article.comments_count}", [:admin, article, :comments])
        %td.article-options.right
          - if current_user.has_role(["Admin", "Editor"]) and !article.deactivated?
            = feature_icon_select(article, article.title)
          = link_to("<i class='far fa-edit'></i>", edit_admin_article_path(article)) if current_user.has_role(["Admin", "Editor", "Author"]) or !article.published?
          = trash_icon(article, admin_article_path(article), "#{article.title}") if current_user.has_role(["Admin", "Editor", "Author"])
- if session[:cache] == true
  %iframe{:src => "/admin/columns?cache=true", :style => "height: 1px; border: 0; width: 1px"}
- @responsive = true
- content_for :meta_title do
  =@cms_config['site_settings']['article_title'] ? @cms_config['site_settings']['article_title'].pluralize : "Articles"

%h1= large_icon('Write') + ' ' + yield(:meta_title).strip

%div.box
  .float-right= render :partial => "/shared/search"
  %ul
    %li
      %span.hmenu
        = icon "Plus", new_admin_article_path(@article)
        = link_to "Write a new #{@cms_config['site_settings']['article_title']}", new_admin_article_path(@article)
        - #%span.desktop-only== as #{current_user.name}
    - if current_user.has_role(["Admin", "Editor"])
      %li
        %span.hmenu
          = icon "Folder2", admin_article_categories_path
          = link_to "Manage categories", admin_article_categories_path
    - if current_user.has_role(["Admin", "Editor"])
      %li
        %span.hmenu
          = icon "Rss 1", admin_feeds_path
          = link_to "Manage RSS Feeds", admin_feeds_path
  = clear
%br

- unless params[:q].blank?
  %h2== Found #{pluralize @all_articles.size, "article"}.

%table.article-list.full_width{ :cellspacing => "0" }
  %thead
    %tr
      %th
      %th.author-header Author
      %th.status-header Status
      %th.images-header Images
      %th.files-header Files
      %th.comments-header Comments
      %th.options-header.center{ :style => "width: 65px;" } Options
  - if @articles.total_pages > 1
    %tfoot
      %tr
        %td{ :colspan => "3" }= will_paginate @articles
  %tbody
    - for article in @articles do

      %tr[article]{ :class => "#{cycle('odd','even')} #{'from-feed' if !article.source_url.blank?} article-title" }
        %td.article-title
          %span.hmenu
            - if current_user.has_role(["Admin", "Editor", "Author"]) or !article.published?
              = link_to h(article.title), edit_admin_article_path(article)
            - else
              = link_to h(article.title), article_path(article)
          - if article.article_categories.active.count == 0 and article.article_category.blank?
            %span.small.red= link_to("no category", edit_admin_article_path(article), :class => "red")
        %td.article-author.detail
          == #{article.person.blank? ? article.author_name : article.person.name}
        %td.article-status.detail
          - if article.published_date_in_past? and article.published?
            .publish= link_to "Published", article, :class => "green"
            %div== #{article.published_at.strftime('%b %d, %Y')}
          - elsif article.to_be_published?
            .to-publish Published
            %div== for #{article.published_at.strftime('%a, %b %d')}
          - elsif article.deactivated?
            .pending Pending
          - else
            .draft= link_to "Draft", edit_admin_article_path(article), :class => "gray"
        - if (current_user.is_contributor_only? && article.published)
          %td.article-images
            = "%d images" % article.images_count
          %td
            = "%d files" % article.assets_count
        -else
          %td
            = icon "Picture", [:admin, article, :images]
            = link_to article.images_count, [:admin, article, :images]
          %td
            - if article.assets_count < 1
              = icon "Document", [:new, :admin, article, :asset]
              = link_to article.assets_count, [:new, :admin, article, :asset]
            - else
              = icon "Document", [:admin, article, :assets]
              = link_to article.assets_count, [:admin, article, :assets]
        %td
          = icon("Discuss", [:admin, article, :comments])
          = link_to article.comments_count, [:admin, article, :comments]
        %td.article-options.right
          - if current_user.has_role(["Admin", "Editor"]) and !article.deactivated?
            = feature_icon_select(article, article.title)
          = icon "Write", edit_admin_article_path(article) if current_user.has_role(["Admin", "Editor", "Author"]) or !article.published?
          = trash_icon(article, admin_article_path(article), "#{article.title}") if current_user.has_role(["Admin", "Editor", "Author"])